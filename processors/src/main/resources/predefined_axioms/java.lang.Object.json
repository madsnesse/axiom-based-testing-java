[{"method":"//@InheritAxioms(forClass = \"org.example.Position\")\n//class PositionInherits{} //this class will inherit all axioms from its parent(s)\n@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsIsReflexive(Object o) {\n    assertEquals(o, o);\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"},{"method":"@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsIsSymmetric(Object x, Object y) {\n    assertEquals(x.equals(y), y.equals(x));\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"},{"method":"@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsIsTransitive(Object x, Object y, Object z) {\n    if (x.equals(y) && y.equals(z)) {\n        assertEquals(x, z);\n    }\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"},{"method":"@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsIsConsistent(Object x, Object y) {\n    assertEquals(x.equals(y), x.equals(y));\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"},{"method":"@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsNullIsFalse(Object x) {\n    assertEquals(x.equals(null), false);\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"},{"method":"@AxiomForExistingClass(className = \"java.lang.Object\")\npublic static void equalsCongruence(Object o) {\n    //the public methods of a class\n    var m = o.getClass().getMethods();\n    // legg inn metoder som skal sjekkes i axiom prosseseringen\n}","isGeneric":true,"qualifiedClassName":"java.lang.Object"}]